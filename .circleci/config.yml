---
version: 2.1

executors:
  ruby_executor:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
  rails_executor:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.6.8-alpine-postgis
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle-test_test
commands:
  install_system_dependencies:
    description: "Install system dependencies"
    steps:
      - run:
          name: install system dependencies
          command: |
            sudo apt-get update && \
            sudo apt-get install -y pdftk ghostscript postgresql-client
  install_js_dependencies:
    description: "Install JS dependencies"
    steps:
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install --frozen-lockfile
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.npm
  install_ruby_dependencies:
    description: "Install Ruby dependencies"
    steps:
      - restore_cache:
          key: bundle-v3-{{ checksum "Gemfile.lock" }}
      - run:
          name: install bundler & ruby dependencies
          command: |
            gem install bundler:2.2.5 --no-document && \
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: if [ ! -e ~/.webdrivers/chromedriver ] ; then bundle exec rake webdrivers:chromedriver:update ; fi
      - save_cache:
          key: bundle-v3-{{ checksum "Gemfile.lock" }}
          paths: [vendor/bundle, ~/.webdrivers]
  await_test_db:
    description: "Await test database"
    steps:
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
jobs:
  run_js_tests:
    executor: ruby_executor
    steps:
      - checkout
      - install_js_dependencies
      - run: mkdir -p test-results/jest
      - run:
          command: npm test --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: test-results/jest/
      - store_test_results:
          path: test-results
  run_ruby_tests:
    executor: rails_executor
    parallelism: 4
    steps:
      - checkout
      - install_js_dependencies
      - install_system_dependencies
      - install_ruby_dependencies
      - await_test_db
      - run: bundle exec rake db:create db:schema:load
      - run: EAGER_LOAD=1 RAILS_CACHE_CLASSES=1 bundle exec spring rake 'knapsack_pro:queue:rspec[--format documentation]'
      - store_test_results:
          path: tmp/test-results-xml/
  deploy_to_aptible--demo:
    executor: ruby_executor
    steps:
      - checkout
      - run: echo $APTIBLE_PUBLIC_KEY >> ~/.ssh/known_hosts
      - run: git fetch --depth=1000000
      - run: git push git@beta.aptible.com:vita-min-demo/vita-min-demo.git $CIRCLE_SHA1:master
    parallelism: 1
  deploy_to_aptible--production:
    executor: ruby_executor
    steps:
      - checkout
      - run: echo $APTIBLE_PUBLIC_KEY >> ~/.ssh/known_hosts
      - run: git fetch --depth=1000000
      - run: git push git@beta.aptible.com:vita-min-prod/vita-min-prod.git $CIRCLE_SHA1:master
    parallelism: 1
workflows:
  version: 2
  ci-and-deploy:
    jobs:
      - run_js_tests
      - run_ruby_tests
      - deploy_to_aptible--demo:
          requires: [run_js_tests, run_ruby_tests]
          filters:
            branches:
              only: main
      - deploy_to_aptible--production:
          requires: [run_js_tests, run_ruby_tests]
          filters:
            branches:
              only: release
